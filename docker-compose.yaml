services:
  postgres:
    image: postgres:16
    container_name: ${PG_HOST}
    environment:
      POSTGRES_DB: ${PG_NAME}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
    expose:
      - "5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped

  spring-app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      PG_HOST: ${PG_HOST}
      PG_PORT: 5432
      PG_USER: ${PG_USER}
      PG_PASSWORD: ${PG_PASSWORD}
      PG_NAME: ${PG_NAME}
    expose:
      - "8081"
    ports:
      - "8080:8080"
    container_name: spring-micrometer-app
    depends_on:
      - postgres

  mock-requests:
    build:
      context: ./observability/mockRequests
      dockerfile: Dockerfile
    container_name: http-request-bot

  prometheus:
    build:
      context: ./observability/prometheus
      dockerfile: Dockerfile
    expose:
      - "9090"
    container_name: prometheus

  grafana:
    build:
      context: ./observability/grafana
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    container_name: grafana

volumes:
  pgdata: